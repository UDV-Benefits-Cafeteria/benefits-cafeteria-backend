services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    entrypoint: ["bash", "entrypoint.sh"]
    command: poetry run uvicorn src.main:app --host=0.0.0.0
    ports:
      - "8000:8000"
    volumes:
      - .:/src
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_PORT
      - POSTGRES_HOST
      - SECRET_KEY
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_PORT
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "$POSTGRES_DB", "-U", "$POSTGRES_USER" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: "rabbitmq:4-management"

    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5672:5672"

  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: poetry run celery -A src.celery.celery worker -l debug --without-mingle --without-gossip
    environment:
      - DATABASE_URL=postgres+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@{POSTGRES_HOST}:{POSTGRES_PORT}/${POSTGRES_DB}
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq//
    depends_on:
      - rabbitmq
      - db
      - app
    restart: on-failure

  flower:
    build:
      context: .
      dockerfile: Dockerfile.prod
    hostname: flower
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq//
      - CELERY_RESULT_BACKEND=rpc://
      - FLOWER_PORT=5555
      - DATABASE_URL=postgres+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@{POSTGRES_HOST}:{POSTGRES_PORT}/${POSTGRES_DB}
    command: poetry run celery -A src.celery.celery flower --basic-auth=${FLOWER_LOGIN}:${FLOWER_PASSWORD}
    depends_on:
      - rabbitmq
      - db
      - app
    ports:
      - "5555:5555"

  elasticsearch:
    image: elasticsearch:8.15.3
    volumes:
      - ./elastic_config.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - esdata:/usr/share/elasticsearch/data
    environment:
      - ES_JAVA_OPTS=-Xmx512m -Xms512m
      - ELASTIC_PASSWORD
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
    esdata:
