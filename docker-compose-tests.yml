services:
  tests_app:
    container_name: app_for_tests
    build:
      context: .
      dockerfile: Dockerfile.tests
    entrypoint: ["bash", "entrypoint_tests.sh"]
    command: ["poetry", "run", "pytest"]
    ports:
      - "8000:8000" # for FastAPI
      - "5678:5678" # for DEBUG=True (debugpy)
    volumes:
      - .:/src
    environment:
      DEBUG: True
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
      POSTGRES_HOST: tests_db
      SECRET_KEY: some_secret_key_for_tests
      CELERY_BROKER_URL: amqp://guest:guest@tests_rabbitmq//
      CELERY_RESULT_BACKEND: rpc://
    depends_on:
      tests_db:
        condition: service_healthy
    restart: no

  tests_db:
    container_name: db_for_tests
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "$POSTGRES_DB", "-U", "$POSTGRES_USER" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: no

  tests_rabbitmq:
    image: "rabbitmq:4-management"

    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5672:5672"

  tests_celery:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: poetry run celery -A src.celery.celery worker -l debug --without-mingle --without-gossip
    environment:
      - DATABASE_URL=postgres+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@{POSTGRES_HOST}:{POSTGRES_PORT}/${POSTGRES_DB}
      - CELERY_BROKER_URL=amqp://guest:guest@tests_rabbitmq//
    depends_on:
      - tests_rabbitmq
      - tests_db
      - tests_app
    restart: no
