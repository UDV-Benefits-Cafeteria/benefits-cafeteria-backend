services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile.dev
    entrypoint: ["bash", "entrypoint.sh"]
    command: poetry run debugpy --listen 0.0.0.0:5678 -m uvicorn src.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000" # for FastAPI
      - "5678:5678" # for DEBUG=True (debugpy)
    volumes:
      - .:/src
    env_file: .env
    environment:
      - DEBUG=True
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
      - SECRET_KEY=888777dddssskjjdnnwmckeinoasec
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  db:
    container_name: db
    image: postgres:16-alpine
    env_file: .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "$POSTGRES_DB", "-U", "$POSTGRES_USER" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  elasticsearch:
    image: elasticsearch:8.15.3
    volumes:
      - ./elastic_config.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./elastic_data:/usr/share/elasticsearch/data
    environment:
      - ES_JAVA_OPTS=-Xmx512m -Xms512m
      - ELASTIC_PASSWORD=elasticpass
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 15s
      timeout: 10s
      retries: 10

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
